{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Static Page Constructor Stack",
  "Parameters": {},
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "AllowAccessToPageTemplatesDynamoDBTable",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "dynamodb:*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "PageTemplates",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "AllowAccessToPagesDynamoDBTable",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "dynamodb:*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "Pages",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "AllowAccessToWidgetsDynamoDBTable",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "dynamodb:*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "Widgets",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "AllowAccessToDefinitionsStore",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "s3:*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "DefinitionsStore",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "AllowAccessToTargetSiteStore",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "s3:*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TargetSiteStore",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "GetPage": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/GetPage@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "GetPageTemplate": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/GetPageTemplate@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "GetWidget": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/GetWidget@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "ImportPageTemplates": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/ImportPageTemplates@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "ImportWidgets": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/ImportWidgets@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "ListPageTemplates": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/ListPageTemplates@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "ListPages": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/ListPages@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "ListWidgets": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/ListWidgets@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "PublishPage": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/PublishPage@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "SavePage": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "PageTemplates",
        "Pages",
        "Widgets",
        "DefinitionsStore",
        "TargetSiteStore"
      ],
      "Properties": {
        "Runtime": "nodejs6.10",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "static-page-constructor",
          "S3Key": "lambdas/SavePage@1.0.0.zip"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "Environment": {
          "Variables": {
            "PAGE_TEMPLATES_TABLE_NAME": {
              "Ref": "PageTemplates"
            },
            "PAGES_TABLE_NAME": {
              "Ref": "Pages"
            },
            "WIDGETS_TABLE_NAME": {
              "Ref": "Widgets"
            },
            "DEFINITIONS_BUCKET": {
              "Ref": "DefinitionsStore"
            },
            "TARGET_SITE_BUCKET": {
              "Ref": "TargetSiteStore"
            }
          }
        }
      }
    },
    "GetPageInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetPage",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "GetPageTemplateInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetPageTemplate",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "GetWidgetInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetWidget",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ImportPageTemplatesInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ImportPageTemplates",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ImportWidgetsInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ImportWidgets",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ListPageTemplatesInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListPageTemplates",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ListPagesInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListPages",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ListWidgetsInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListWidgets",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "PublishPageInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PublishPage",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "SavePageInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SavePage",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "Api"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "Api": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Static Page Constructor Api",
        "Description": "Api used by Static Page Constructor CMS",
        "FailOnWarnings": true
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "GetPageMethod",
        "GetPageTemplateMethod",
        "GetWidgetMethod",
        "ImportPageTemplatesMethod",
        "ImportWidgetsMethod",
        "ListPageTemplatesMethod",
        "ListPagesMethod",
        "ListWidgetsMethod",
        "PublishPageMethod",
        "SavePageMethod"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "StageName": "DummyStage"
      }
    },
    "ApiStage": {
      "Type": "AWS::ApiGateway::Stage",
      "DependsOn": [
        "ApiAccount"
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiDeployment"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "Api"
        },
        "StageName": "dev"
      }
    },
    "ApiCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayLogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiCloudWatchLogsRole",
            "Arn"
          ]
        }
      }
    },
    "GetPageResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "GetPage"
      }
    },
    "GetPageTemplateResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "GetPageTemplate"
      }
    },
    "GetWidgetResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "GetWidget"
      }
    },
    "ImportPageTemplatesResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "ImportPageTemplates"
      }
    },
    "ImportWidgetsResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "ImportWidgets"
      }
    },
    "ListPageTemplatesResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "ListPageTemplates"
      }
    },
    "ListPagesResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "ListPages"
      }
    },
    "ListWidgetsResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "ListWidgets"
      }
    },
    "PublishPageResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "PublishPage"
      }
    },
    "SavePageResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "SavePage"
      }
    },
    "GetPageMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "GetPageInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetPage",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "GetPageResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "GetPageTemplateMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "GetPageTemplateInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetPageTemplate",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "GetPageTemplateResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "GetWidgetMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "GetWidgetInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetWidget",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "GetWidgetResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "ImportPageTemplatesMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "ImportPageTemplatesInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ImportPageTemplates",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "ImportPageTemplatesResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "ImportWidgetsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "ImportWidgetsInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ImportWidgets",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "ImportWidgetsResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "ListPageTemplatesMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "ListPageTemplatesInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListPageTemplates",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "ListPageTemplatesResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "ListPagesMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "ListPagesInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListPages",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "ListPagesResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "ListWidgetsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "ListWidgetsInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListWidgets",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "ListWidgetsResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "PublishPageMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "PublishPageInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PublishPage",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "PublishPageResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "SavePageMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "SavePageInvokePermission"
      ],
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SavePage",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "SavePageResource"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    },
    "GetPageOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "GetPageResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "GetPageTemplateOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "GetPageTemplateResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "GetWidgetOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "GetWidgetResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "ImportPageTemplatesOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "ImportPageTemplatesResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "ImportWidgetsOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "ImportWidgetsResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "ListPageTemplatesOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "ListPageTemplatesResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "ListPagesOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "ListPagesResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "ListWidgetsOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "ListWidgetsResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "PublishPageOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "PublishPageResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "SavePageOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": 200
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{'statusCode': 200}"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": 200
          }
        ],
        "ResourceId": {
          "Ref": "SavePageResource"
        },
        "RestApiId": {
          "Ref": "Api"
        }
      }
    },
    "UsagePlan": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "Api"
            },
            "Stage": {
              "Ref": "ApiStage"
            }
          }
        ],
        "Description": "Static Page Constructor Usage Plan"
      }
    },
    "ApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": [
        "ApiDeployment",
        "ApiStage"
      ],
      "Description": "Static Page Constructor API Key V1",
      "Properties": {
        "Enabled": true,
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "Api"
            },
            "StageName": "dev"
          }
        ]
      }
    },
    "UsagePlanKey": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "Properties": {
        "KeyId": {
          "Ref": "ApiKey"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "UsagePlan"
        }
      }
    },
    "PageTemplates": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "slug",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "slug",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "WriteCapacityUnits": 5,
          "ReadCapacityUnits": 5
        }
      }
    },
    "Pages": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "slug",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "slug",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "WriteCapacityUnits": 5,
          "ReadCapacityUnits": 5
        }
      }
    },
    "Widgets": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "slug",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "slug",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "WriteCapacityUnits": 5,
          "ReadCapacityUnits": 5
        }
      }
    },
    "DefinitionsStore": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "AccessControl": "PublicRead",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "ExposedHeaders": [
                "ETag"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        }
      }
    },
    "TargetSiteStore": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "AccessControl": "PublicRead",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "ExposedHeaders": [
                "ETag"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        }
      }
    },
    "CMSSiteStore": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "Project",
            "Value": "Static Page Constructor"
          }
        ],
        "AccessControl": "PublicRead",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "ExposedHeaders": [
                "ETag"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        }
      }
    },
    "UserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "AliasAttributes": [
          "email"
        ],
        "MfaConfiguration": "OFF",
        "UserPoolTags": {
          "Project": "Static Page Constructor"
        }
      }
    },
    "UserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "GenerateSecret": false,
        "UserPoolId": {
          "Ref": "UserPool"
        }
      }
    },
    "IdentityPool": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "UserPoolClient"
            },
            "ProviderName": {
              "Fn::GetAtt": [
                "UserPool",
                "ProviderName"
              ]
            }
          }
        ]
      }
    },
    "CognitoUnAuthorizedRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ],
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              }
            }
          ]
        },
        "Policies": []
      }
    },
    "CognitoAuthorizedRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ],
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "InvokePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:GET",
                    "execute-api:Invoke"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "BucketsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:Put*",
                    "s3:ListBucket",
                    "s3:*MultipartUpload*"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "DefinitionsStore"
                          },
                          "/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "TargetSiteStore"
                          },
                          "/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "CMSSiteStore"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "IdentityPoolRoleMapping": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Ref": "IdentityPool"
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "CognitoAuthorizedRole",
              "Arn"
            ]
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "CognitoUnAuthorizedRole",
              "Arn"
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "UserPoolId": {
      "Value": {
        "Ref": "UserPool"
      },
      "Export": {
        "Name": "UserPool::Id"
      }
    },
    "UserPoolClientId": {
      "Value": {
        "Ref": "UserPoolClient"
      },
      "Export": {
        "Name": "UserPoolClient::Id"
      }
    },
    "IdentityPoolId": {
      "Value": {
        "Ref": "IdentityPool"
      },
      "Export": {
        "Name": "IdentityPool::Id"
      }
    },
    "ApiKey": {
      "Value": {
        "Ref": "ApiKey"
      },
      "Export": {
        "Name": "ApiKey::Id"
      }
    }
  }
}